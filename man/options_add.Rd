% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/options.R
\name{options_add}
\alias{options_add}
\alias{options_remove}
\alias{options_add_parameters}
\title{Functions for options in a workflow set}
\usage{
options_add(x, ..., id = NULL, strict = FALSE)

options_remove(x, ...)

options_add_parameters(x, id = NULL, strict = FALSE)
}
\arguments{
\item{x}{A workflow set}

\item{...}{A list of named options. For \code{options_remove()} this can be a
series of unquoted option names.}

\item{id}{A character string of one or more values from the \code{wflow_id}
column that indicates which options to update. By default, all workflows
are updated.}

\item{strict}{A logical; show execution stop if existing options are being
replaced?}
}
\value{
An updated workflow set.
}
\description{
Functions for options in a workflow set
}
\details{
\code{options_add()} is used to update all of the options in a workflow set.

\code{options_remove()} will eliminate specific options across rows.

\code{options_add_parameters()} adds a parameter object to the \code{option} column
(if parameters are being tuned).

Note that executing a function on the workflow set, such as \code{tune_grid()},
will add any options given to that function to the \code{option} column.
}
\examples{
two_class_set \%>\%
  options_add(a = 1)

two_class_set \%>\%
  options_add(a = 1) \%>\%
  options_add(b = 2, id = "none_cart")

library(tune)
two_class_set \%>\%
  options_add_parameters()
}
